name: local-stack-smoke

on:
  push:
    paths:
      - docker-compose.neo4j-qdrant.yml
      - scripts/check_local_stack.sh
      - tests/integration/local_stack/**
      - docs/architecture/overview.md
      - .github/workflows/local-stack-smoke.yml
  pull_request:
    paths:
      - docker-compose.neo4j-qdrant.yml
      - scripts/check_local_stack.sh
      - tests/integration/local_stack/**
      - docs/architecture/overview.md
      - .github/workflows/local-stack-smoke.yml
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock

      - name: Prepare environment file
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cp .env.example .env
          python - <<'PY'
          import os
          from pathlib import Path

          env_path = Path('.env')
          lines = []
          with env_path.open() as fh:
              for raw_line in fh:
                  line = raw_line.rstrip('\n')
                  if line.startswith('OPENAI_API_KEY='):
                      secret = os.environ.get('OPENAI_API_KEY', '')
                      lines.append(f'OPENAI_API_KEY="{secret}"')
                  elif line.startswith('OPENAI_MAX_ATTEMPTS='):
                      lines.append('OPENAI_MAX_ATTEMPTS=3  # default 3 attempts total')
                  elif line.startswith('OPENAI_BACKOFF_SECONDS='):
                      lines.append('OPENAI_BACKOFF_SECONDS=0.5  # default 0.5s base delay')
                  elif line.startswith('OPENAI_ENABLE_FALLBACK='):
                      lines.append('OPENAI_ENABLE_FALLBACK=true  # set to true to enable fallback model selection')
                  else:
                      lines.append(line)
          env_path.write_text('\n'.join(lines) + '\n')
          PY
          cat .env >> "$GITHUB_ENV"

      - name: Validate compose configuration
        run: scripts/check_local_stack.sh --config

      - name: Run minimal path smoke test
        env:
          PYTHONPATH: stubs:src
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: pytest tests/integration/local_stack/test_minimal_path_smoke.py
