name: local-stack-smoke

on:
  push:
    paths:
      - docker-compose.neo4j-qdrant.yml
      - scripts/check_local_stack.sh
      - tests/integration/local_stack/**
      - docs/architecture/overview.md
      - .github/workflows/local-stack-smoke.yml
  pull_request:
    paths:
      - docker-compose.neo4j-qdrant.yml
      - scripts/check_local_stack.sh
      - tests/integration/local_stack/**
      - docs/architecture/overview.md
      - .github/workflows/local-stack-smoke.yml
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock

      - name: Prepare environment file
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          cat <<'EOF' > .env
          OPENAI_API_KEY="${OPENAI_API_KEY}"
          OPENAI_EMBEDDING_MODEL="text-embedding-3-small"
          OPENAI_MODEL="gpt-4.1-mini"
          OPENAI_MAX_ATTEMPTS=3
          OPENAI_BACKOFF_SECONDS=0.5
          OPENAI_ENABLE_FALLBACK=true
          NEO4J_USERNAME="neo4j"
          NEO4J_PASSWORD="local-neo4j"
          NEO4J_URI="bolt://localhost:7687"
          NEO4J_BOLT_ADVERTISED_ADDRESS="localhost:7687"
          NEO4J_HTTP_ADVERTISED_ADDRESS="localhost:7474"
          NEO4J_HTTP_PORT="7474"
          NEO4J_BOLT_PORT="7687"
          QDRANT_URL="http://localhost:6333"
          QDRANT_API_KEY=""
          QDRANT_HTTP_PORT="6333"
          QDRANT_GRPC_PORT="6334"
          EOF
          cat .env >> "$GITHUB_ENV"

      - name: Validate compose configuration
        run: scripts/check_local_stack.sh --config

      - name: Run minimal path smoke test
        env:
          PYTHONPATH: stubs:src
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: pytest tests/integration/local_stack/test_minimal_path_smoke.py
